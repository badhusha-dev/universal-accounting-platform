# Production override for docker-compose.yml
# This file provides production-specific configurations
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  # Production database configuration
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-accounting_db}
      POSTGRES_USER: ${POSTGRES_USER:-accounting_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Production Redis configuration
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_prod_data:/data
    ports:
      - "6379:6379"
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Production Kafka configuration
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADVERTISED_HOST:-localhost}:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - kafka_prod_data:/var/lib/kafka/data
    restart: always
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.0'
        reservations:
          memory: 2G
          cpus: '0.5'

  # Production microservices configuration
  eureka-server:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  gateway:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  auth-service:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-accounting_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-accounting_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  tenant-service:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-accounting_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-accounting_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  ledger-service:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-accounting_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-accounting_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  transaction-service:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-accounting_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-accounting_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  reports-service:
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-accounting_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-accounting_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  frontend:
    environment:
      REACT_APP_API_URL: ${FRONTEND_API_URL:-https://api.yourdomain.com}
      REACT_APP_ENV: production
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  postgres_prod_data:
  redis_prod_data:
  kafka_prod_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
